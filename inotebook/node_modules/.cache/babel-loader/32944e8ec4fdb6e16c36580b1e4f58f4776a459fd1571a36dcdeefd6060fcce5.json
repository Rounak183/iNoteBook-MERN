{"ast":null,"code":"var _jsxFileName = \"/Users/rounak/Desktop/Learnings/React/inotebook/src/context/notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all Notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/note/fetchallnotes/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    setNotes(json);\n  };\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    const response = await fetch(`${host}/api/note/addnote/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const deleteNote = async id => {\n    const response = await fetch(`${host}/api/note/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    // eslint-disable-next-line\n    const json = await response.json();\n    console.log(\"Deleting the note with id \" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    const response = await fetch(`${host}/api/note/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    // eslint-disable-next-line\n    const json = await response.json();\n    let newNotes = JSON.parse(JSON.stringify(notes));\n\n    // Logic to Edit in Client\n    console.log(\"Editing the note with id \" + id);\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","console","log","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rounak/Desktop/Learnings/React/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\"\n    const notesInitial = [];\n    const [notes, setNotes] = useState(notesInitial);\n\n    // Get all Notes\n    const getNotes = async () => {\n        const response = await fetch(`${host}/api/note/fetchallnotes/`, {\n            method: 'GET', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token') \n            },\n        });\n        const json = await response.json();\n        setNotes(json);\n    }\n\n    // Add a Note\n    const addNote = async (title, description, tag) => {\n        const response = await fetch(`${host}/api/note/addnote/`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token') \n            },\n            body: JSON.stringify({title, description, tag})\n        });\n        const note = await response.json();\n        setNotes(notes.concat(note))\n    } \n\n    // Delete a Note\n    const deleteNote = async (id) => {\n        const response = await fetch(`${host}/api/note/deletenote/${id}`, {\n            method: 'DELETE', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token') \n            },\n        });\n        // eslint-disable-next-line\n        const json = await response.json();\n\n\n        console.log(\"Deleting the note with id \"+id);\n        const newNotes = notes.filter((note)=>{return note._id!==id})\n        setNotes(newNotes)\n    }\n\n    // Edit a Note\n    const editNote = async (id, title, description, tag) => {\n        const response = await fetch(`${host}/api/note/updatenote/${id}`, {\n            method: 'PUT', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': localStorage.getItem('token') \n            },\n            body: JSON.stringify({title, description, tag})\n        });\n        // eslint-disable-next-line\n        const json = await response.json();\n\n        let newNotes = JSON.parse(JSON.stringify(notes));\n\n        // Logic to Edit in Client\n        console.log(\"Editing the note with id \" + id);\n        for (let index = 0; index<newNotes.length; index++)\n        {\n            const element = newNotes[index];\n            if (element._id === id)\n            {\n                newNotes[index].title = title;\n                newNotes[index].description = description;\n                newNotes[index].tag = tag;\n                break;\n            }\n        }\n        setNotes(newNotes);\n    }\n\n    return (\n        <NoteContext.Provider value={{ notes , addNote , deleteNote , editNote , getNotes }}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n}\n\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}