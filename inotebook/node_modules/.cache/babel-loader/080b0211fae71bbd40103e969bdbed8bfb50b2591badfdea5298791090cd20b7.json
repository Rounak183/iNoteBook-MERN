{"ast":null,"code":"var _jsxFileName = \"/Users/rounak/Desktop/Learnings/React/inotebook/src/context/notes/NoteState.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all Notes\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/note/fetchallnotes/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  // Add a Note\n  const addNote = async (title, description, tag) => {\n    // TODO: API Call\n    // eslint-disable-next-line\n    const response = await fetch(`${host}/api/note/addnote/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = Response.json;\n    console.log(json);\n    console.log(\"Adding a new note\");\n    const note = {\n      \"_id\": \"64248c3ab51ebae2cc1f894d\",\n      \"user\": \"6423f376024f44a7c7ecde35\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"date\": \"2023-03-29T19:06:34.840Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n\n  // Delete a Note\n  const deleteNote = async id => {\n    // TODO: API Call\n    // eslint-disable-next-line\n    const response = await fetch(`${host}/api/note/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY'\n      }\n    });\n    const json = Response.json;\n    console.log(json);\n    console.log(\"Deleting the note with id \" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    // TODO API Call\n\n    const response = await fetch(`${host}/api/note/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = Response.json;\n\n    // Logic to Edit in Client\n    console.log(\"Editing the note with id \" + id);\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","Response","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rounak/Desktop/Learnings/React/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import { useState } from \"react\";\nimport NoteContext from \"./noteContext\";\n\nconst NoteState = (props) => {\n    const host = \"http://localhost:5000\"\n    const notesInitial = [];\n    const [notes, setNotes] = useState(notesInitial);\n\n    // Get all Notes\n    const getNotes = async () => {\n        const response = await fetch(`${host}/api/note/fetchallnotes/`, {\n            method: 'GET', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY' \n            },\n        });\n        const json = await response.json();\n        console.log(json);\n        setNotes(json);\n    }\n\n    // Add a Note\n    const addNote = async (title, description, tag) => {\n        // TODO: API Call\n        // eslint-disable-next-line\n        const response = await fetch(`${host}/api/note/addnote/`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY' \n            },\n            body: JSON.stringify({title, description, tag})\n        });\n        const json = Response.json;\n        console.log(json);\n\n        console.log(\"Adding a new note\");\n        const note = {\n            \"_id\": \"64248c3ab51ebae2cc1f894d\",\n            \"user\": \"6423f376024f44a7c7ecde35\",\n            \"title\": title,\n            \"description\": description,\n            \"tag\": tag,\n            \"date\": \"2023-03-29T19:06:34.840Z\",\n            \"__v\": 0\n        };\n        setNotes(notes.concat(note))\n    } \n\n    // Delete a Note\n    const deleteNote = async (id) => {\n        // TODO: API Call\n        // eslint-disable-next-line\n        const response = await fetch(`${host}/api/note/deletenote/${id}`, {\n            method: 'DELETE', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY' \n            },\n        });\n        const json = Response.json;\n        console.log(json);\n\n        console.log(\"Deleting the note with id \"+id);\n        const newNotes = notes.filter((note)=>{return note._id!==id})\n        setNotes(newNotes)\n    }\n\n    // Edit a Note\n    const editNote = async (id, title, description, tag) => {\n        // TODO API Call\n        \n        const response = await fetch(`${host}/api/note/updatenote/${id}`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyM2YzNzYwMjRmNDRhN2M3ZWNkZTM1In0sImlhdCI6MTY4MDA4NDY4M30.K3_5HXaLuY5Umx53XiDG-zT1hSATr-q1I9THernuxrY' \n            },\n            body: JSON.stringify({title, description, tag})\n        });\n        const json = Response.json;\n\n        // Logic to Edit in Client\n        console.log(\"Editing the note with id \"+id);\n        for (let index = 0; index<notes.length; index++)\n        {\n            const element = notes[index];\n            if (element._id === id)\n            {\n                element.title = title;\n                element.description = description;\n                element.tag = tag;\n            }\n        }\n    }\n\n    return (\n        <NoteContext.Provider value={{ notes, addNote , deleteNote , editNote , getNotes }}>\n            {props.children}\n        </NoteContext.Provider>\n    )\n}\n\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}